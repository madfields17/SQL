
/*For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL */


CREATE TABLE BIT_DB.Spotifydata1 (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

/*Then I inserted the Spotify Data .csv into the table.
Next, I explored the data using the following SQL. */

/*What is the avg popularity, danceability, and energy by artist and track? */
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata1
GROUP BY artist_name, track_name;

/*Who are the Top 10 artists by popularity?*/
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata1
ORDER BY popularity desc
LIMIT 10;

/*How many artists are in the top 50 songs?*/
SELECT COUNT(distinct artist_name)
FROM BIT_DB.spotifydata1;

/*What is the longest song in the top 50 and what artist released it? */

SELECT artist_name, track_name
FROM BIT_DB.spotifydata1
ORDER BY duration_ms desc
LIMIT 1;

/* Use a CTE to calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
*/

WITH popularity_average_CTE AS (
    SELECT AVG(popularity) AS average_popularity, artist_name
    FROM Spotifydata1
    GROUP BY artist_name)

SELECT artist_name, average_popularity, 'Top Star' AS tag 
FROM popularity_average_CTE
WHERE average_popularity >=90;
